# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Untrail GET URLs (http://stackoverflow.com/questions/13189095/play-framework2-remove-trailing-slash-from-urls)
GET     /*path/                                          controllers.web.Application.untrail(path)
# Authorize custom headers (http://daniel.reuterwall.com/blog/2013/04/15/play-with-cors)
OPTIONS /*path                                           controllers.api.auth.CorsController.allowCustomHeaders(path)

# Scrobbles API
POST    /v0.4/scrobbles                                  controllers.api.scrobbles.ScrobblesController_V0_4.postScrobbles()
GET     /v0.4/scrobbles/:userId                          controllers.api.scrobbles.ScrobblesController_V0_4.getScrobbles(userId, daysOffset: Int ?= -1, results: Int ?= -1)
PUT     /v0.4/scrobbles/:scrobbleId                      controllers.api.scrobbles.ScrobblesController_V0_4.putScrobbles(scrobbleId)
DELETE  /v0.4/scrobbles/:scrobbleId                      controllers.api.scrobbles.ScrobblesController_V0_4.deleteScrobbles(scrobbleId)

# Users API
POST    /v0.4/users                                      controllers.api.scrobbles.UsersController_V0_4.postUsers()
GET     /v0.4/users                                      controllers.api.scrobbles.UsersController_V0_4.getUsers(userId ?= null)
PUT     /v0.4/users/:userId                              controllers.api.scrobbles.UsersController_V0_4.putUsers(userId)

# Stations API (@ indicates dependency injection)
POST    /v0.4/stations                                   @controllers.api.stations.StationsController_V0_4.postStations()
GET     /v0.4/stations                                   @controllers.api.stations.StationsController_V0_4.getStations(stationId ?= null)
PUT     /v0.4/stations/:stationId                        @controllers.api.stations.StationsController_V0_4.putStations(stationId)
PUT     /v0.4/stations/:stationId/addScrobblers          @controllers.api.stations.StationsController_V0_4.putStationsAddScrobblers(stationId)
PUT     /v0.4/stations/:stationId/removeScrobblers       @controllers.api.stations.StationsController_V0_4.putStationsRemoveScrobblers(stationId)
POST    /v0.4/nextSong	                                 @controllers.api.stations.StationsController_V0_4.postNextSong()

# Feedback API
POST    /v0.4/songFeedback                               controllers.api.stations.SongFeedbackController_V0_4.postSongFeedback()
GET     /v0.4/starredSongs/:userId                       controllers.api.stations.SongFeedbackController_V0_4.getStarredSongs(userId)
DELETE  /v0.4/songFeedback/:idForFeedback/:feedbackType  controllers.api.stations.SongFeedbackController_V0_4.deleteSongFeedback(idForFeedback, feedbackType)

# Database Fixes
#POST    /v0.4/fixScrobbles                               controllers.api.scrobbles.ScrobblesController_V0_4.postFixScrobbles()
#POST    /v0.4/fixUserNames                               controllers.api.scrobbles.UsersController_V0_4.postFixUserNames()
#POST    /v0.4/fixTestUser                                controllers.api.scrobbles.UsersController_V0_4.postFixTestUser()

# Web App
GET     /dev                                             controllers.web.Application.index()
POST    /postAppDeveloper                                controllers.web.AppDevelopersController.postAppDevelopers()

# Javascript routes
GET     /assets/javascripts/routes                       controllers.web.Application.javascriptRoutes()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                    controllers.Assets.at(path="/public", file)
